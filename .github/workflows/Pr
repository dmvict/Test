
name: Pr

on:
  pull_request_target:
    types: [opened, edited]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: Vankka/pr-target-branch-action@v1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target: master
          include: beta
          exclude: Github:.*
          change-to: alpha
          comment: |
            Your PR was set to `main`, PRs should be sent to `development`
            The base branch of this PR has been automatically changed to `development`, please check that there are no merge conflicts

# on :
#   pull_request :
#     branches-ignore:
#       - master
#
# jobs:
#   run:
#     runs-on : ubuntu-latest
#     steps :
#       - run: echo YES


# env:
#   CARGO_TERM_COLOR: always
#
# jobs:
#
#   check:
#     runs-on : ubuntu-latest
#     outputs:
#       shouldRun: ${{ steps.run.outputs.shouldRun }}
#     steps :
#       - name: List commits on the pull request
#         run: |
#           response=$(curl --request GET \
#           --url 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits' \
#           --header 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
#           --header 'Accept: application/vnd.github.v3+json' \
#           --header 'Content-Type: application/json')
#           echo $response > response.json
#       # - name: List commits on the pull request
#       #   if: ${{ secrets.PRIVATE_GITHUB_TOKEN }}
#       #   run: |
#       #     response=$(curl --request GET \
#       #     --url 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits' \
#       #     --header 'Authorization: token ${{ secrets.PRIVATE_GITHUB_TOKEN }}' \
#       #     --header 'Accept: application/vnd.github.v3+json' \
#       #     --header 'Content-Type: application/json')
#       #     echo $response > response.json
#       # - name: List commits on the pull request
#       #   if: ${{ secrets.PRIVATE_GITHUB_TOKEN == '' }}
#       #   run: |
#       #     response=$(curl --request GET \
#       #     --url 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits' \
#       #     --header 'Accept: application/vnd.github.v3+json' \
#       #     --header 'Content-Type: application/json')
#       #     echo $response > response.json
#       - name: Get latest commit
#         id: message
#         run: |
#           length=$(jq 'length' response.json)
#           index=$(($length - 1))
#           latest_commit=$(jq --argjson index $index '.[$index]' response.json)
#           latest_commit_message=$(echo "$latest_commit" | jq -r '.commit.message')
#           echo "::set-output name=message::$latest_commit_message"
#       - name : Exit with fail
#         id: run
#         if: "${{ !contains( steps.message.outputs.message, '[build]' ) }}"
#         run: echo "::set-output name=shouldRun::false"
#
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Install latest nightly toolchain
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: nightly
#           override: true
#       - run: rustup component add rustfmt
#       - run: cargo +nightly fmt --check

