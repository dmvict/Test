
name: push

on: [ push ]

env:
  some : abc
  val : abc

jobs:

  contexts:
    runs-on: ubuntu-latest
    steps:
      - uses: dmvict/test.action@exp
        env:
          another: 2
          bool: true
          val: val
        with:
          action: actions/hello-world-docker-action@main


  # get:
  #   outputs :
  #     workflow_files: ${{ steps.workflow_files.outputs.files }}
  #     workflow_names: ${{ steps.workflow_names.outputs.names }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - id: workflow_files
  #       run: |
  #         WORKFLOWS=$(ls .github/workflows | grep Module)
  #         for WORKFLOW in $WORKFLOWS ; do
  #           NAME=$(echo $WORKFLOW | sed 's/\(\S\+\).yml/\1/')
  #           NAMES="$NAMES $NAME"
  #         done;
  #         NAMES=$(sed 's/\s\+/\n/g' <<< $NAMES)
  #         OUTPUT=$(echo "$NAMES" | jq -R -s -c 'split("\n")[1:-1]')
  #         echo "::set-output name=files::$OUTPUT"
  #     - id: workflow_names
  #       run: |
  #         WORKFLOWS=$(ls .github/workflows | grep Module)
  #         for WORKFLOW in $WORKFLOWS ; do
  #           NAME=$(cat .github/workflows/$WORKFLOW | grep -G '^name :' | sed 's/name\s*:\s\+\(\S*\)/\1/')
  #           NAMES="$NAMES $NAME"
  #         done;
  #         NAMES=$(sed 's/\s\+/\n/g' <<< $NAMES)
  #         echo "::set-output name=names::"$NAMES""
  #
  # test :
  #   needs : get
  #   uses : dmvict/Test/.github/workflows/Common.yml@master
  #   with :
  #     matrix : '{ "modules" : ${{ needs.get.outputs.workflow_files }} }'
  #     modules : ${{ needs.get.outputs.workflow_names }}

