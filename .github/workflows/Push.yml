
name : push

on : [ push ]

jobs :

  # fast :
  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  #       ports:
  #         # Maps TCP port 5432 in the service container to a randomly chosen available port on the host.
  #         - 5432
  #     postgres2:
  #       image: postgres
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 10
  #       ports:
  #         # Maps TCP port 5432 in the service container to a randomly chosen available port on the host.
  #         - 5433
  #
  #   runs-on : ubuntu-latest
  #   steps :
  #     - run: echo ${{ job.id }}
  #     - run: echo "${{ toJson( job ) }}"
  #     - name: get id
  #       id : id
  #       run: |
  #         id=$(/usr/bin/docker ps --all --filter status=running --no-trunc --format "{{.ID}}")
  #         echo its id $id
  #         echo "::set-output name=id::$id"
  #     - run: echo "${{ toJson( steps.id ) }}"
  #     - run: /usr/bin/docker inspect ${{ steps.id.outputs.id }}

  get:
    outputs :
      workflow_files: ${{ steps.workflow_files.outputs.files }}
      workflow_names: ${{ steps.workflow_names.outputs.names }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: workflow_files
        run: |
          WORKFLOWS=$(ls .github/workflows | grep Common)
          for WORKFLOW in $WORKFLOWS ; do
            NAME=$(echo $WORKFLOW | sed 's/\(\S\+\).yml/\1/')
            NAMES="$NAMES $NAME"
          done;
          NAMES=$(sed 's/\s\+/\n/g' <<< $NAMES)
          OUTPUT=$(echo -e "$NAMES" | jq -R -s -c 'split("\n")[1:-1]')
          echo "::set-output name=files::$OUTPUT"
      - run: echo "\{ "modules : "${{ steps.workflow_files.outputs.files }}" \}"
      # - run: echo "${{ fromJson( '{ "modules : ${{ steps.workflow_files.outputs.files }} }' ) }}"
