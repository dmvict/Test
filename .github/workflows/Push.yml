
name : push

on : [ push ]

jobs :

  with :
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          # Maps TCP port 5432 in the service container to a randomly chosen available port on the host.
          - 5432
    runs-on : ubuntu-latest
    steps :
      - run: echo ${{ job.id }}
      - run: echo "${{ toJSON( job ) }}"
      - uses : dmvict/test.action@exp

  without :
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on : ${{ matrix.os }}
    steps :
      - run: echo ${{ job.id }}
      - run: echo "${{ toJSON( job ) }}"
      - uses : dmvict/test.action@exp

  # get:
  #   outputs :
  #     workflow_files: ${{ steps.workflow_files.outputs.files }}
  #     workflow_names: ${{ steps.workflow_names.outputs.names }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - id: workflow_files
  #       run: |
  #         WORKFLOWS=$(ls .github/workflows | grep Module)
  #         for WORKFLOW in $WORKFLOWS ; do
  #           NAME=$(echo $WORKFLOW | sed 's/\(\S\+\).yml/\1/')
  #           NAMES="$NAMES $NAME"
  #         done;
  #         NAMES=$(sed 's/\s\+/\n/g' <<< $NAMES)
  #         OUTPUT=$(echo "$NAMES" | jq -R -s -c 'split("\n")[1:-1]')
  #         echo "::set-output name=files::$OUTPUT"
  #     - id: workflow_names
  #       run: |
  #         WORKFLOWS=$(ls .github/workflows | grep Module)
  #         for WORKFLOW in $WORKFLOWS ; do
  #           NAME=$(cat .github/workflows/$WORKFLOW | grep -G '^name :' | sed 's/name\s*:\s\+\(\S*\)/\1/')
  #           NAMES="$NAMES $NAME"
  #         done;
  #         NAMES=$(sed 's/\s\+/\n/g' <<< $NAMES)
  #         echo "::set-output name=names::"$NAMES""
  #
  # test :
  #   needs : get
  #   uses : dmvict/Test/.github/workflows/Common.yml@master
  #   with :
  #     matrix : '{ "modules" : ${{ needs.get.outputs.workflow_files }} }'
  #     modules : ${{ needs.get.outputs.workflow_names }}

